#+TITLE: Octopus 10.0 intelmpi2020

To simply use a pre-compiled version you can load it and all prerequisites as a module with:

on rusty:
#+BEGIN_SRC sh
module use --append /mnt/home/jbonini/sw/modules

module load intel/compiler/2020 intel/mpi/2020 intel/mkl/2020 lib/fftw3/3.3.8-intelmpi jb/libxc/4.3.4-intelmpi2020 lib/hdf5/1.12.0-intelmpi jb/netcdf/4.7.4-intelmpi2020 jb/octopus/10.0-intelmpi2020
#+END_SRC

What follows is a guide for compiling octopus for use with rusty or popeye systems.

*Warning: under construction / not thoroughly tested yet*
* Dependencies
** preinstalled
** to be installed manually
*** [[file:../../../libs/libxc/4.3.4-intelmpi2020/README.org][libxc 4.3.4 intelmpi2020]]
*** [[file:../../../libs/netcdf/4.7.4-intelmpi2020/README.org][netcdf 4.7.4 intelmpi2020]]
*** optional dependencies not installed
from
~$grep WARNING config.log~
#+begin_example
libvdwxc
PFFT
PNFFT
etsf_io
BerkeleyGW
SPARSKIT
NLOPT
elpa
Libfm
LibYAML
Futile
PSolver
ISF
the poke
PARMETIS support
likwid
#+end_example


* Setup
if installing from gitlab instead of using the releases on webpage
we also need to generate the configure file:
#+BEGIN_SRC sh
# need to generate for spglib
cd external_libs/spglib-1.9.9
aclocal && autoheader && libtoolize && automake -acf && autoconf
cd ../../
# generate for octopus
aclocal -I m4 && autoheader && libtoolize && automake -acf && autoconf
#+END_SRC
* Compile
#+BEGIN_SRC sh
module purge
module load intel/compiler/2020 intel/mpi/2020 intel/mkl/2020 lib/fftw3/3.3.8-intelmpi jb/libxc/4.3.4-intelmpi2020 lib/hdf5/1.12.0-intelmpi jb/netcdf/4.7.4-intelmpi2020
export LDFLAGS="-L{$MKLROOT}/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -lmkl_blacs_intelmpi_lp64 -liomp5 -lpthread -lm -ldl"
export CFLAGS="-Ofast -ipo -xHost"
export FCFLAGS="-Ofast -ipo -xHost"
#A combination of -Ofast, -ipo, -static (for static linking),  and -xHost.
export CC=mpiicc
export CXX=mpiicpc
export FC=mpiifort
./configure --prefix='/mnt/home/jbonini/sw/octopus/10-intelmpi2020' --with-libxc-prefix="$LIBXC_BASE" --with-netcdf-prefix="$NETCDF_BASE" --enable-mpi --with-blas=yes --with-lapack=yes --with-blacs=yes --with-scalapack=yes
make -j6
make check
make install
#+END_SRC
* Configure
